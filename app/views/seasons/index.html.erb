<nav class="navbar navbar-light bg-light">
  <a class="navbar-brand" href="/seasons">Home</a>
  <form class="form-inline">
    <a class="btn btn-outline-primary" href="/finals" role="button">
      Finals History
    </a>
    <div style="padding-left: 10px;">
      <a class="btn btn-outline-success" href="/awards" role="button">
      Awards History
      </a>
    </div>
  </form>
</nav>



<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>

table, th, td {
  border: 1px solid black;
}

th, td {
  padding: 10px;
}

body {font-family: Arial;}

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
}


</style>
</head>



<body>
  <div class="tab">
    <% @seasons.each do |season| %>
      <button class="tablinks" id="<%= season.year_id %>"><%= season.year_id %></button>
    <% end %>
  </div>


  <script>
          function openYear(evt, YearName) {
            console.log(YearName);
            console.log(evt);
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
              tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
              tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(YearName).style.display = "block";
            evt.currentTarget.className += " active";
          }

      </script>


  <h1>Players</h1>
  <%= link_to 'Create Season', new_season_path %>

      <div ng-controller="MainCtrl as $ctrl">
        <div ui-grid="$ctrl.gridOptions" class="myGrid" ui-grid-resize-columns ui-grid-selection></div>
      </div>

  <% @seasons.each do |season| %>
    <div id="<%= season.year_id %>" class="tabcontent">
      <div><%= link_to 'Create Player', new_player_path %></div>
    </div>
    
    <% end %>

      

  
      <p id="getList">CLICK HERE</p>
      <h5> Click on a category header to sort </h5>



<script>
  

  var app = angular.module('app', ['ngTouch', 'ui.grid', 'ui.grid.resizeColumns', 'ui.grid.selection']);

  app.controller('MainCtrl',
      function ($scope, $http, uiGridConstants) {
        var vm = this,
          gridApi;

        vm.gridOptions = {
          enableFiltering: true,
          enableColumnResizing: true,
          enablePlayerselection: true,
          columnDefs: [
          { name: 'Name', width:200 },
          { name: 'Id', displayName: "Player Link", cellTemplate: '<a href="/players/{{COL_FIELD}}">Go To Player</a>' },
          { name: 'Team', width:200 },
          { name: 'College', width:200 },
          { name: 'Year', type: "number", width:100 },
          { name: 'Draft_Pick', type: "number", width:100  },
          { name: 'Position', width:150 },
          { name: 'GP', type: "number", width:80 },
          { name: 'MPG', type: "number", width:80  },
          { name: 'PPG', type: "number", width:80  },
          { name: 'RPG', type: "number", width:80  },
          { name: 'APG', type: "number" , width:80 },
          { name: 'BPG', type: "number", width:80  },
          { name: 'SPG', type: "number" , width:80 },
          { name: 'FGP', type: "number" , width:80 },
          { name: 'TPP', type: "number" , width:80 },
          { name: 'FTP', type: "number" , width:80 },
          { name: 'Awards', width:300 },
        ],
         onRegisterApi: function onRegisterApi(registeredApi) {
            gridApi = registeredApi;
         }
        };

        vm.gridOptions.data = [];



        $('#getList').on('click', function(){
            mySelectedPlayers = gridApi.selection.getSelectedPlayers(); //<--Property undefined error here
            if (mySelectedPlayers[0]) {
              alert('Selected Player: ' + mySelectedPlayers[0].name + ', ' + mySelectedPlayers[0].id + '.');
            } else {
              alert('Select a player first');
            }
            $timeout(function() {
                if (gridApi.selection.selectedPlayer) {
                    gridApi.selection.selectPlayer(gridOptions.data[0]);
                }
            });
        });

playerData = [];


$('.tablinks').on("click", function(){
  console.log($(this).attr('id'));


  switch($(this).attr('id')) {
<% @seasons.each do |season| %>
  case '<%= season.year_id %>':
    vm.gridOptions.data = [
        <% season.players.each do |player| %>
        {
            Id: '<%= player.id %>',
            Name: '<%= player.name %>',
            Team: "<%= player.Team %>", 
            College: "<%= player.college %>", 
            Year: "<%= player.years %>", 
            Draft_Pick: "<%= player.draftpick %>", 
            Position: "<%= player.position %>",
            GP: "<%= player.GP %>", 
            MPG: "<%= player.MPG %>", 
            PPG: "<%= player.PPG %>", 
            RPG: "<%= player.RPG %>", 
            APG: "<%= player.APG %>", 
            BPG: "<%= player.BPG %>", 
            SPG: "<%= player.SPG %>",
            FGP: "<%= player.fgp %>", 
            TPP: "<%= player.tpp %>", 
            FTP: "<%= player.ftp %>", 
            Awards: "<%= player.award %>"
        },
       <% end %> 
      ];
      console.log(vm.gridOptions.data);
    break;
<% end %>
  default:
    
}


gridApi.core.refresh();


});





        

    




  });




</script>

      <!--{ Team: 'gender' },
      { Year: 'company' },
      { name: 'widgets' },
      { name: 'cumulativeWidgets', field: 'widgets', cellTemplate: '<div class="ui-grid-cell-contents" title="TOOLTIP">{{grid.appScope.cumulative(grid, Player)}}</div>' }-->

</body>

<p id="notice"><%= notice %></p>


